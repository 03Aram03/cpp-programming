#include <iostream>
#include <stdexcept>
using namespace std;

class MyVector {
private:
    int* arr;
    int capacity;
    int sz;
    void resize() {
        capacity *= 2;
        int* newArr = new int[capacity];
        for (int i = 0; i < sz; i++)
            newArr[i] = arr[i];
        delete[] arr;
        arr = newArr;
    }
public:
    MyVector() { capacity = 1; sz = 0; arr = new int[capacity]; }
    ~MyVector() { delete[] arr; }

    void push_back(int value) {
        if (sz == capacity) resize();
        arr[sz++] = value;
    }

    void pop_back() { if (sz > 0) sz--; }
    int size() const { return sz; }
    int& operator[](int index) {
        if (index < 0 || index >= sz) throw out_of_range("Index out of range");
        return arr[index];
    }
};

// Usage in the same file
int main() {
    MyVector v;
    v.push_back(10);
    v.push_back(20);
    v.push_back(30);

    cout << "Size: " << v.size() << endl;
    for (int i = 0; i < v.size(); i++)
        cout << v[i] << " ";
    cout << endl;

    v[1] = 50; 
    cout << "After update: ";
    for (int i = 0; i < v.size(); i++)
        cout << v[i] << " ";
    cout << endl;

    v.pop_back();
    cout << "After pop_back, size: " << v.size() << endl;

    return 0;
}

